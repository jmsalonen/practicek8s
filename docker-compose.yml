# Docker Compose file for localhost development

services:
  timescaledb:
    image: timescale/timescaledb-ha:pg14-latest
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./init_databases.sql:/docker-entrypoint-initdb.d/10_init_databases.sql
      - ./global_database.sql:/docker-entrypoint-initdb.d/20_global_database.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: timescaledb
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: 1234
    depends_on:
      - timescaledb
    command: [ "start-dev" ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/realms/master || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 30

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5001:5001"
    environment:
      # ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://*:5001
      KeyCloak__api_url: "http://keycloak:8080/"
      KeyCloak__admin_base: "/admin/realms"
      KeyCloak__url: "keycloak:8080"
      realms: "customer1"
      database__realm_url: "Host=timescaledb:5432;User Id=postgres;Password=password"
      database__global_url: "Host=timescaledb:5432;User Id=postgres;Password=password;Database=global"
      eventHandler__api_url: "http://deviceeventhandler:5002/api/DeviceEventHandler/event"

  deviceeventhandler:
    build:
      context: ./DeviceEventHandler
      dockerfile: Dockerfile
    container_name: deviceeventhandler
    ports:
      - "5002:5002"
    environment:
      # ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://*:5002
      backend__api_url: "http://backend:5001/"

  appgw:
    build:
      context: ./AppGW
      dockerfile: Dockerfile
    container_name: appgw
    ports:
      - "443:443"

volumes:
  timescaledb_data:
